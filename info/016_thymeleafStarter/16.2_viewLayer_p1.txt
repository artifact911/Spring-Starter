-- Создали users.html - для отображения списка пользователей. Для клика на пользователя нам нужно создать
 одельную html, которая будет отображать конкретного пользака

    <body>
        <div th:each="user : ${users}">
            <a th:href="@{'/users/' + ${user.id}}" th:text="|${user.id}. ${user.username}|">User</a>
        </div>
    </body>

        th:each - итератор
        user - имя переменной внутри итератора
        users - это имя атрибута с юзерами, которое мы придумали и назвали так в UserController:
            model.addAttribute("users", userService.findAll());

        th:href="@{}" - динамическая ссылка
        th:text - заменит текст User на динамичесаую составляющую в th:text="|${user.id}. ${user.username}| - // | - конкатенация строк


    -- Создали user.html - форма для изменения юзера

    <body>
       <form th:action="@{/users/{userId}/update(userId=${user.id})}" method="post" th:object="${user}"></form>
            - th:action - какой экшн у формы. В пути есть динамическая составляющая, значит нужен th
                и вместо конкатенации строк, мы можем сделать так:
                    "@{/users/{userId}/update(userId=${user.id})}"
                указали, что userId - это (userId=${user.id})
            - th:object="${user}" - указываем, чтоб во всех полях мы могли не писать user.username.
                Задали объект для обращения - user.
                Аналог в input если дропнуть th:object будет такой:
                    th:value="${user.username}"


            <label for="username">Username:
                <input id="username" type="text" name="username" th:value="*{username}">
            </label><br>
                - name="username" - должен соответствовать имени поля в ДТО
                - th:value="*{username}" - значение поля, которое правим и отправляем на сервер


            <label for="birthDate">BirthDate:
                <input id="birthDate" type="date" name="birthDate" th:value="*{birthDate}">
            </label><br>
            <label for="lastname">Lastname:
                <input id="lastname" type="text" name="lastname" th:value="*{lastname}">
            </label><br>
            <label for="firstname">Firstname:
                <input id="firstname" type="text" name="firstname" th:value="*{firstname}">
            </label><br>

            <div th:each="role : ${roles}">
                - приделали атрибут в контроллере, чтоб можно было к ролям обратиться:
                    model.addAttribute("roles", Role.values());

                <input th:id="${role}" type="radio" name="role" th:value="${role} th:checked="${role == user.role}">
                    - сделали радиобаттон на каждую роль
                    - th:checked="${role == user.role} - сделали предвыбранную текущую роль юзера
                <label th:for="${role}" th:text="${role}">Role name</label>
            </div>
            <div>
              <label for="company">Company:
                <select name="companyId">
                    <option th:each="company : ${companies}"
                            th:value="${company.id()}"
                            th:selected="${company.id() == user.company.id()}"
                            th:text="${company.name()}">Company</option>
                </select>
              </label>
            </div>
                - model.addAttribute("companies", companyService.findAll()); - получили доступ к компаниям
                - th:selected="${company.id() == user.company.id()}" - предвыбрали, по аналогии с radio

            <button type="submit">Update</button>
        </form>
        <form th:action="@{/users/{userId}/delete(userId=${user.id})}" th:if="${user.role.name() == 'ADMIN'}" method="post">
            <button type="submit">Remove</button>
        </form>
        - th:if="${user.role.name() == 'ADMIN'}" - сработает. если юзер Админ
    </body>
